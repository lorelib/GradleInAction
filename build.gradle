allprojects {
    group 'com.lorelib'
    version '1.0'

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'eclipse'
    apply plugin: 'eclipse-wtp'
    apply plugin: 'groovy'
    apply plugin: 'war'
    apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'
}

apply from: "config.gradle"

description "Gradle in action project"

// 使用gradle -q check输出
println name
println project.name

def book = "童年"
println book

jar {
    manifest {
        attributes 'Implementation-Title': 'GradleInAction', 'Implementation-Version': version, 'Provider': 'gradle'
    }
}

ext {
    springVersion = "4.3.13.RELEASE"
}

subprojects {
    sourceCompatibility = 1.8

    test {
        systemProperties 'p1': "test"
    }

    repositories {
        maven {
            url ""
        }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile "org.springframework:spring-webmvc:$springVersion"
        compile "org.mybatis:mybatis:$mybatisVersion"
        compile "org.apache.zookeeper:zookeeper:$zookeeperVersion"
        compile 'org.codehaus.groovy:groovy-all:2.4.13'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}

sourceSets.all { ext.purpose = null }

sourceSets {
    main {
        purpose = "production"
    }
    test {
        purpose = "test"
    }
}

task printProperties << {
    println springVersion
    sourceSets.matching { it.purpose == "production" }.each { println it.name }
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
        mavenDeployer {
            repository(url: "")
        }
    }
}

def dest = "dest"
task copy(type: Copy) {
    from "source"
    into dest
}

println project.copy.name

// gradle -q hello执行
task hello {
    doLast  {
        println 'Hello world!'
    }
}

task upper(dependsOn: hello) << {
    String name = 'listening'
    println "name: " + name
    println "upper name: " + name.toUpperCase()
}

// dependsOn中用''包含的依赖任务为Lazy dependsOn任务，即依赖的任务还没有被创建
task hello2(dependsOn: ['lazyT', hello]) << {
    println 'Hello world2!'
}

task lazyT << {
    println 'behind load'
}

// gradle -q task1 、 gradle -q task2等，从0开始
4.times { count ->
    task "task$count" << {
        println "task number $count"
    }
}

task0.dependsOn task2, task3

hello.doFirst {
    println 'Hello first'
}

// $引用任务必须在""双引号里面
hello.doLast {
    println "task name: $hello.name"
}

task myTask {
    ext.myProperty = 'my task'
}

task printTaskProperties << {
    println myTask.myProperty
}

defaultTasks 'cleanT', 'runT'

task cleanT << {
    println 'default clean'
}

task runT << {
    println 'default run'
}

task distribution << {
    println "We build the zip with version=$version"
}

task release(dependsOn: 'distribution') << {
    println 'we release now'
}

gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(release)) {
        version = '1.0'
    } else {
        version = '1.0-SNAPSHOT'
    }
}

